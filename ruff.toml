# File as ruff default values except where noted via commented out default value.

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# extend-exclude = []  # Default value
extend-exclude = ["*.ipynb", "src/beanahead/_version.py"]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[lint]  
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]  # Default value
select = ["ALL"]
# ignore = []  # Default value
ignore = [
    "ANN",  # flake8-annotations. TODO: fix / tighten up ignore.
    "PT",  # flake8-pytest-style. TODO: fix / tighten up ignore.
    "PLR2004",  # magic-value-comparison. TODO: Review. Maybe tighten up with fixes and inline noqa.
    "EM101",  # raw-string-in-exception. TODO: Review / fix.
    "EM102",  # f-string-in-exception. TODO: Review / fix.
    "TRY003",  # raise-vanilla-args. TODO: Review / fix.
    # Global wilful ignores...
    "COM812",  # missing-trailing-comma.  As recommended by ruff as conflicts with formatter.
    "TD002",  # missing-todo-author
    "TD003",  # missing-todo-issue
    "FIX002",  # line-contains-todo.  Ignore here to pass CI tests.
    "PLR0913",  # too-many-arguments
    "D105",  # undocumented-magic-method
    # Package-specific wilful ignores...
    # None
]

[lint.per-file-ignores]
"tests/**/*.py" = [
    "N802",  # invalid-function-name
    "N803",  # invalid-argument-name
    "N806",  # non-lowercase-variable-in-function
    "SLF001",  # private-member-access
    "PLR0912",  # too-many-branches
    "PLR0915",  # too-many-statements
    "C901",  # complex-structure. Mccabe.
    "S101",  # assert
    "D101",  # undocumented-public-class.
    "D102",  # undocumented-public-method.
    "D103",  # undocumented-public-function.
    "D401",  # non-imperative-mood. Imperative mood not suitable for fixtures.
]

[lint.pydocstyle]
convention = "numpy"

[lint.flake8-annotations]
mypy-init-return = true

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"